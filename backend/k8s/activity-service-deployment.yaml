apiVersion: apps/v1
kind: Deployment
metadata:
  name: activity-service
  labels:
    app: activity-service
spec:
  replicas: 1 # Number of pods to run for high availability
  selector:
    matchLabels:
      app: activity-service
  template:
    metadata:
      labels:
        app: activity-service
    spec:
      containers:
        - name: activity-service
          image: nud-activity-service:latest # Replace with your Docker image
          imagePullPolicy: Never
          ports:
            - containerPort: 5003 # The port your application listens to
          env:
            - name: NODE_ENV
              value: "production"
            - name: ACTIVITY_SERVICE_URL
              value: "0.0.0.0:5003"
            - name: DATABASE_HOST
              value: "activity-service-mysql"
            - name: MYSQL_ROOT_USERNAME
              value: "root"
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: DATABASE_PORT
              value: "3307"
            - name: MYSQL_DATABASE
              value: "nud-activity-service"
            - name: FRIEND_MATCHING_SERVICE_URL
              value: "friend-matching-service"
            - name: RMQ_URL
              value: "amqp://rabbitmq:5672"
            - name: ACTIVITY_PROTO_PATH
              value: "./proto/activity.proto"
            - name: FRIEND_MATCHING_PROTO_PATH
              value: "./proto/friendmatching.proto"
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          # livenessProbe: # Checks if the gRPC server port is open
          #   grpc:
          #     port: 5003
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          # readinessProbe: # Checks if the gRPC server port is ready to accept traffic
          #   grpc:
          #     port: 5003
          #   initialDelaySeconds: 5
          #   periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: activity-service
spec:
  type: LoadBalancer # Use ClusterIP for internal access only or NodePort for limited external access
  ports:
    - protocol: TCP
      port: 5003
      targetPort: 5003
  selector:
    app: activity-service

# Add ExternalName service for mysql database
---
apiVersion: v1
kind: Service
metadata:
  name: activity-service-mysql
spec:
  type: ExternalName
  externalName: host.docker.internal
  ports:
    - port: 3307 # The port to expose
      targetPort: 3307 # The port where MySQL is running on your localhost
